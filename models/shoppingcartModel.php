<?phpclass shoppingcartModel extends Model {    public function __construct() {        parent::__construct();    }    public function InsertOrder($carrito, $idSession, $porcdescuento, $descuento, $total, $code) {//        $code = $this->GetCodeVentas(Functions::generateRandomString(50));        $data = date("Y-m-d H:i:s");        $info = Functions::detectSistema();        $sistema = array('sistema' => $info["os"], 'navegador' => $info["browser"], 'version' => $info["version"]);        $sistema = json_encode($sistema);        $this->_db->prepare("INSERT INTO ventas(id_usuario,arr_tracks,porcdescuento,descuento,total,fecha_init,fecha_fin,id_code,browser) VALUES(:id_usuario,:arrayCarrito,:porcdescuento,:descuento,:total,:date,:date,:id_code,:browser)")->execute(array(":id_usuario" => $idSession, ":arrayCarrito" => $carrito, ":porcdescuento" => $porcdescuento, ":descuento" => $descuento, ":total" => $total, ":date" => $data, ":id_code" => $code, ":browser" => $sistema));        $_SESSION['carrito_paypal'] = $code;    }    public function GetUsuarioId($usuario) {        $datos = $this->_db->query("SELECT id FROM usuarios " . "WHERE usuario = '{$usuario}' ");        return $datos->fetch(PDO::FETCH_ASSOC);    }    public function GetPrecioCarrito($carrito) {        $precio = 0;        for ($i = 0; $i < count($carrito->cart); $i++) {            $precio += $carrito->cart[$i]->precio;            foreach ($carrito->cart[$i]->version as $key => $value) {                $precio += $value->precio;            }        } return $precio;    }    public function GetVentasCode($code) {        $datos = "SELECT * FROM ventas WHERE id_code ='{$code}'";        $data = $this->_db->query($datos);        $dato = $data->fetch(PDO::FETCH_ASSOC);        return $dato;    }    public function GetCodeVentas($codigos) {        $datos = "SELECT * FROM ventas WHERE id_code ='{$codigos}'";        $data = $this->_db->query($datos);        $dato = $data->fetchAll(PDO::FETCH_ASSOC);        $count = count($dato);        if ($count == 0) {            $codigo = $codigos;        } else {            $codigo = null;            while ($count != 0) {                $codigo = Functions::generateRandomString(50);                $datos = "SELECT * FROM ventas WHERE id_code ='{$codigo}'";                $data = $this->_db->query($datos);                $dato = $data->fetchAll(PDO::FETCH_ASSOC);                $count = count($dato);            }        } return $codigo;    }    public function UpdatePaypal($id_carrito, $browser, $payer_id, $payment_date, $payer_email, $payer_status, $payment_status) {        $this->_db->prepare("UPDATE ventas SET browser=:browser, estado=:estado, payer_id=:payer_id, payment_date=:payment_date, payer_email=:payer_email, payer_status=:payer_status, payment_status=:payment_status, fecha_fin=now() WHERE id_code=:id_carrito")->execute(array(":id_carrito" => $id_carrito, ":browser" => $browser, ":estado" => "PAGADO", ":payer_id" => $payer_id, ":payment_date" => $payment_date, ":payer_email" => $payer_email, ":payer_status" => $payer_status, ":payment_status" => $payment_status,));        unset($_SESSION['carrito_paypal']);    }    public function GetCountRegistros($id_usuario) {        $datos = $this->_db->query("SELECT id_usuario FROM ventas " . "WHERE id_usuario = '{$id_usuario}' ");        $da = $datos->fetchall(PDO::FETCH_ASSOC);        return count($da);    }    public function PrepareOrderFiles($order) {        $carrito = Session::get("carrito_paypal");        $carritos = $this->GetVentasCode($carrito);        $cart = $carritos['arr_tracks'];        $cart = json_decode($cart);        $carts = $cart->cart;        $usuario = Session::get("usuario");        $deleteTraks = array();        for ($i = 0; $i < count($carts); $i++) {            $exp = explode(".mp3", $carts[$i]->MP3Demo);            Functions::FTP("KTZS/" . $exp[0] . ".KZT", "modules/usuarios/ftp/" . $usuario . "/" . $order . "/" . $exp[0] . ".mp3");            $name = "/home/superb/public_html/modules/usuarios/ftp/$usuario/$order/$exp[0].mp3";            $fin = "/home/superb/public_html/modules/usuarios/ftp/$usuario/$order/$exp[0]";            $delete = "modules/usuarios/ftp/$usuario/$order/$exp[0].mp3";            if ($carts[$i]->pitch != 0) {                $pitch = $carts[$i]->pitch;                if (Functions::PITCH($pitch, $name, $fin)) {                                    }            } print_r($carts[$i]->version[$x]);            for ($x = 0; $x < count($carts[$i]->version); $x++) {                $exp2 = explode(".mp3", $carts[$i]->version[$x]->cancion);                $name = "/home/superb/public_html/modules/usuarios/ftp/$usuario/$order/$exp2[0].mp3";                $fin = "/home/superb/public_html/modules/usuarios/ftp/$usuario/$order/$exp2[0]";                Functions::FTP("KTZS/" . $exp2[0] . ".KZT", "modules/usuarios/ftp/" . $usuario . "/" . $order . "/" . $exp2[0] . ".mp3");                if ($carts[$i]->version[$x]->pitch != 0) {                    $pitch = $carts[$i]->version[$x]->pitch;                    if (Functions::PITCH($pitch, $name, $fin)) {                                            }                }            }        } Session::destroy("carrito");    }}?>